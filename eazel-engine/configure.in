AC_INIT(src/eazel-theme.h)

# Save this value here, since automake will set cflags later
cflags_set=${CFLAGS+set}

AM_INIT_AUTOMAKE(eazel-engine, 0.3)
AM_CONFIG_HEADER(config.h)

dnl Initialize maintainer mode
AM_MAINTAINER_MODE

ACLOCAL="$ACLOCAL $ACLOCAL_FLAGS"

AC_CANONICAL_HOST

AC_PROG_CC
AM_PROG_CC_STDC
AC_PROG_INSTALL
AC_PROG_MAKE_SET

dnl Initialize libtool
AM_DISABLE_STATIC
AM_PROG_LIBTOOL

# Checks for programs.
AM_PATH_GTK
AM_PATH_GDK_PIXBUF

CAPPLET_CFLAGS=`gnome-config --cflags gnomeui capplet`
CAPPLET_LIBS=`gnome-config --libs gnomeui capplet`
AC_SUBST(CAPPLET_CFLAGS)
AC_SUBST(CAPPLET_LIBS)

GNOME_CFLAGS=`gnome-config --cflags gnomeui libglade`
GNOME_LIBS=`gnome-config --libs gnomeui libglade`
AC_SUBST(GNOME_CFLAGS)
AC_SUBST(GNOME_LIBS)

# Checks for header files.
AC_HEADER_STDC

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST

# Checks for endianness (needed by GdkRgb).
AC_C_BIGENDIAN

# Checks for library functions.
AC_TYPE_SIGNAL
AC_FUNC_MMAP
AC_FUNC_ALLOCA
AC_CHECK_FUNCS(setenv putenv)

# If using GCC and it doesn't look as though the cflags have been
# set explicitly, add some warning options
if test "x${GCC}" = "xyes" -a "x$CFLAGS" = "x-g -O2"; then
  CFLAGS="${CFLAGS} -Wall -Wmissing-prototypes"
fi

AC_OUTPUT([
eazel-engine.spec
Makefile
src/Makefile
capplet/Makefile
data/Makefile
Crux/Makefile
Crux/gtk/Makefile
])
